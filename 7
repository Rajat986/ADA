#include<stdio.h>
#include<time.h>
#define infinity 999

int main()
{
        clock_t start,end,tt;
        start=clock();
        void dijkstra(int n,int G[n][n],int startnode);

        int i,j,n,u;
        printf("Enter no. of vertices:");
        scanf("%d",&n);
        int G[n][n];
        printf("\nEnter the adjacency matrix:\n");

        for(i=0;i<n;i++)
                for(j=0;j<n;j++)
                        scanf("%d",&G[i][j]);

        printf("\nEnter the starting node:");
        scanf("%d",&u);
        dijkstra(n,G,u);
        end=clock();
        tt=(double)(end-start);
        printf("\nStart: %ld\nEnd: %ld\nTotal Time: %ld\n",start,end,tt);
        return 0;
}

void dijkstra(int n,int G[n][n],int startnode)
{

        int cost[n][n],distance[n],pred[n];
        int visited[n],count,mindistance,nextnode,i,j;

        for(i=0;i<n;i++)
                for(j=0;j<n;j++)
                        if(G[i][j]==0)
                                cost[i][j]=infinity;
                        else
                                cost[i][j]=G[i][j];

        for(i=0;i<n;i++)
        {
                distance[i]=cost[startnode][i];
                pred[i]=startnode;
                visited[i]=0;
        }

        distance[startnode]=0;
        visited[startnode]=1;
        count=1;

        while(count<n-1)
        {
                mindistance=infinity;
                for(i=0;i<n;i++)
                        if(distance[i]<mindistance&&!visited[i])
                        {
                                mindistance=distance[i];
                                nextnode=i;
                        }
                        visited[nextnode]=1;
                        for(i=0;i<n;i++)
                                if(!visited[i])
                                        if(mindistance+cost[nextnode][i]<distance[i])
                                        {
                                                distance[i]=mindistance+cost[nextnode][i];
                                                pred[i]=nextnode;
                                        }
                count++;
        }

        for(i=0;i<n;i++)
                if(i!=startnode)
                {
                        printf("\nDistance of node %d = %d",i,distance[i]);
                        printf("\nPath=%d",i);

                        j=i;
                        do
                        {
                                j=pred[j];
                                printf(" <-%d ",j);
                        }while(j!=startnode);
        }
        printf("\n");
}

Input:
    Enter no. of vertices:5

    Enter the adjacency matrix:
    0   10 0  30 100
    10  0  50 0  0     
    0   50 0  20 10
    30  0  20 0  60
    100 0  10 60 0

    Enter the starting node:0

  Output:
    Distance of node 1 = 10
    Path=1 <-0 
    Distance of node 2 = 50
    Path=2 <-3  <-0 
    Distance of node 3 = 30
    Path=3 <-0 
    Distance of node 4 = 60
    
    Path=4 <-2  <-3  <-0 
