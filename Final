#include <stdio.h>
void printsolution(int SIZE, int solution[SIZE][SIZE])
{
    int i,j;
    for(i=0;i<SIZE;i++)
    {
        for(j=0;j<SIZE;j++)
        {
            printf("%d ",solution[i][j]);
        }
        printf("\n");
    }
    i=0,j=0;
    printf("\nThe path is:");
    printf("(%d,%d)-->",i+1,j+1);

    while(i<SIZE || j<SIZE)
    {
	    if(i == SIZE-1 && j == SIZE-1)
	    {
		printf("Destination Reached.\n");
		return;
	    }
	    else
	    if(solution[i+1][j] == 1)
	    {
		i=i+1;
		printf("(%d,%d)-->",i+1,j+1);
	    }
	    else
	    if(solution[i][j+1] == 1)
	    {
		j=j+1;
		printf("(%d,%d)-->",i+1,j+1);
	    }
	    else
	    if(solution[i-1][j] == 1)
	    {
		i=i-1;
		printf("(%d,%d)-->",i+1,j+1);
	    }
	    else
	    if(solution[i][j-1] == 1)
	    {
		j=j-1;
		printf("(%d,%d)-->",i+1,j+1);
	    }
    }

    printf("\n");
github
}

int solvemaze(int r, int c, int SIZE, int maze[SIZE][SIZE], int solution[SIZE][SIZE])
{
    if((r==SIZE-1) && (c==SIZE-1))
    {
        solution[r][c] = 1;
        return 1;
    }
    if(r>=0 && c>=0 && r<SIZE && c<SIZE && solution[r][c] == 0 && maze[r][c] == 0)
    {
        solution[r][c] = 1;
        if(solvemaze(r+1, c,SIZE,maze,solution))
            return 1;
        if(solvemaze(r, c+1,SIZE,maze,solution))
            return 1;
        if(solvemaze(r-1, c,SIZE,maze,solution))
            return 1;
        if(solvemaze(r, c-1,SIZE,maze,solution))
            return 1;
        solution[r][c] = 0;
        return 0;
    }
    return 0;

}

void main()
{
    	int i,j,SIZE;
	printf("Enter size of the matrix: ");
	scanf("%d",&SIZE);
yyo:	printf("Enter maze[Use only 0 or 1 | 1 are the blocks]:\n");
	int maze[SIZE][SIZE],solution[SIZE][SIZE];
        for(int i=0;i<SIZE;i++)
                for(int j=0;j<SIZE;j++)
                {
                        printf("maze[%d][%d]: ",i+1,j+1);
                        scanf("%d",&maze[i][j]);
                }
yo:	printf("\nThe maze is:\n");
	for(i=0;i<SIZE;i++)
	{
		for(j=0;j<SIZE;j++)
		{
			printf("%d ",maze[i][j]);
		}
		printf("\n");
	}
	if(maze[SIZE-1][SIZE-1] == 1)
	{
		maze[SIZE-1][SIZE-1] = 0;
		printf("Destination cannot be '1', converting it to 0!!!\n");
		goto yo;
	}


    for(i=0; i<SIZE; i++)
    {
        for(j=0; j<SIZE; j++)
        {
            solution[i][j] = 0;
        }
    }
    	if (solvemaze(0,0,SIZE,maze,solution))
	{
		printf("\nThe solution is:\n");
        	printsolution(SIZE,solution);
	}
    	else
        	printf("No solution\n");
}
